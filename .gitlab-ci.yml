# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

image: gradle:alpine
include:
  - template: Security/SAST.gitlab-ci.yml

stages:
  - test
  - deploy

cache:
  key: project-gradle-cache
  policy: pull
  paths:
    - build
    - .gradle

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME

test:
  stage: test
  script: gradle check
  cache:
    policy: pull-push

sast:
  stage: test

deploy:
  extends:
    - .deploy_template
  stage: deploy
  environment:
    name: production
  only:
    - master

.deploy_template:
  image: ruby:latest
  script:
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api_key=$HEROKU_API_KEY
  environment:
    url: "https://$($HEROKU_APP_NAME).herokuapp.com/"